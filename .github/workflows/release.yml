name: Build and Publish

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - labeled
      - unlabeled
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to build the image with. Format *.*.*((beta|rc)*)?"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-metadata:
    name: Generate docker metadata
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'require-build')) || (github.event_name != 'pull_request' && !cancelled()) }}
    outputs:
      tags: ${{steps.meta.outputs.tags}}
      labels: ${{steps.meta.outputs.labels}}
      annotations: ${{steps.meta.outputs.annotations}}
      platforms: |
        linux/amd64
        ${{(startsWith(github.ref, 'refs/tags/') && 'linux/arm64') || ''}}
    permissions:
      contents: read
    steps:
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ github.token }}
          images: "{0}/{1}"
          tags: |
            type=raw,value=branch-{{branch}},enable=${{ !startsWith(github.ref, 'refs/tags/') && !startsWith(github.ref, 'refs/pull/') }}
            type=sha,prefix=sha-,format=long,suffix=-dev,enable=${{ !startsWith(github.ref, 'refs/tags/') }}
            type=sha,prefix=sha-,format=long,enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=ref,event=pr
            type=pep440,value=${{inputs.tag || github.ref_name}},pattern={{version}}
            type=pep440,value=${{inputs.tag || github.ref_name}},pattern={{major}}.{{minor}}
            type=pep440,value=${{inputs.tag || github.ref_name}},pattern={{major}}

  build-stackvm:
    name: Build and Push stackvm Image
    runs-on: ubuntu-latest
    needs: docker-metadata
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.RELEASE_DOCKERHUB_USERNAME }}
          password: ${{ secrets.RELEASE_DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push stackvm
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{needs.docker-metadata.outputs.platforms}}
          push: true
          tags: ${{format(needs.docker-metadata.outputs.tags, secrets.RELEASE_DOCKERHUB_USERNAME, 'stackvm')}}
          labels: ${{needs.docker-metadata.outputs.labels}}
          annotations: ${{needs.docker-metadata.outputs.annotations}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
