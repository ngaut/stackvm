"""empty message

Revision ID: 775a11445aee
Revises: 
Create Date: 2025-01-21 14:26:54.433556

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '76f42c78b501'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('namespaces',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('allowed_tools', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_namespaces_name'), 'namespaces', ['name'], unique=True)
    op.create_table('labels',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('namespace_name', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('best_practices', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['namespace_name'], ['namespaces.name'], name='fk_label_namespace'),
    sa.ForeignKeyConstraint(['parent_id'], ['labels.id'], name='fk_label_parent'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_labels_id'), 'labels', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_progress', 'completed', 'failed', 'deleted', name='task_status'), server_default='pending', nullable=True),
    sa.Column('repo_path', sa.String(length=255), nullable=False),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.String(length=36), nullable=True),
    sa.Column('project_id', sa.String(length=36), nullable=True),
    sa.Column('best_plan', sa.JSON(), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('evaluation_status', sa.Enum('NOT_EVALUATED', 'WAITINT_FOR_EVALUATION', 'APPROVED', 'REJECTED', name='evaluation_status'), server_default='NOT_EVALUATED', nullable=True, comment='The evaluation status of the task by the LLM.'),
    sa.Column('evaluation_reason', sa.Text(), nullable=True, comment='Reason for rejection if the task is not approved.'),
    sa.Column('human_evaluation_status', sa.Enum('NOT_EVALUATED', 'WAITINT_FOR_EVALUATION', 'APPROVED', 'REJECTED', name='human_evaluation_status'), server_default='NOT_EVALUATED', nullable=True, comment='The evaluation status of the task by the Human.'),
    sa.Column('human_feedback', sa.Text(), nullable=True, comment='Reason for rejection if the task is not approved.'),
    sa.Column('label_id', sa.String(length=36), nullable=True),
    sa.Column('namespace_name', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], name='fk_task_label'),
    sa.ForeignKeyConstraint(['namespace_name'], ['namespaces.name'], name='fk_task_namespace'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commits',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('commit_hash', sa.String(length=40), nullable=False),
    sa.Column('parent_hash', sa.String(length=40), nullable=True),
    sa.Column('message', sa.JSON(), nullable=False),
    sa.Column('vm_state', sa.JSON(), nullable=False),
    sa.Column('committed_at', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_commit_task'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('commit_hash')
    )
    op.create_index('idx_commit_hash', 'commits', ['commit_hash'], unique=False)
    op.create_index('idx_commit_parent', 'commits', ['parent_hash'], unique=False)
    op.create_index('idx_commit_task_time', 'commits', ['task_id', 'committed_at'], unique=False)
    op.create_table('branches',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('head_commit_hash', sa.String(length=40), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['head_commit_hash'], ['commits.commit_hash'], name='fk_branch_commit'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_branch_task'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'task_id', name='uk_branch_name_task')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('branches')
    op.drop_index('idx_commit_task_time', table_name='commits')
    op.drop_index('idx_commit_parent', table_name='commits')
    op.drop_index('idx_commit_hash', table_name='commits')
    op.drop_table('commits')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_labels_id'), table_name='labels')
    op.drop_table('labels')
    op.drop_index(op.f('ix_namespaces_name'), table_name='namespaces')
    op.drop_table('namespaces')
    # ### end Alembic commands ###
